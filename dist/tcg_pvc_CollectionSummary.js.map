{"version":3,"sources":["webpack:///./node_modules/@cityofphiladelphia/phila-vue-comps/src/components/CollectionSummary.vue?aaca","webpack:///./node_modules/@cityofphiladelphia/phila-vue-comps/src/components/CollectionSummary.vue?1683","webpack:///node_modules/@cityofphiladelphia/phila-vue-comps/src/components/CollectionSummary.vue","webpack:///./node_modules/@cityofphiladelphia/phila-vue-comps/src/components/CollectionSummary.vue"],"names":["components_CollectionSummaryvue_type_script_lang_js_","mixins","computed","[object Object]","valueQuantities","this","contextFn","isPlural","naturalList","context","options","singular","plural","descriptor","items","naturalizeQuantities","len","length","Array","isArray","join","slice","descriptorPlural","slots","$store","state","getValue","reduce","obj","item","val","methods","values","Object","keys","types","includeZeroes","acc","type","value","quantity","labelSingular","label","labelWithNumber","quantityWithLabel","push","component","componentNormalizer","_h","$createElement","_self","_c","_v","_s","summary","__webpack_exports__"],"mappings":"iGAAA,ICA6IA,ECW7I,CACAC,OAAA,SACAC,SAAA,CAEAC,UAEA,MAAAC,EAAAC,KAAAD,gBAWA,OAFAE,EAJAD,KADA,WAFAA,KAAAE,SAAAH,GAEA,uBAGAC,KAAAG,cAMAL,kBACA,MAAAM,EAAAJ,KAAAK,QAAAD,QACA,OAAAA,EAAAE,UAAAF,GAEAN,gBACA,MAAAM,EAAAJ,KAAAK,QAAAD,QACA,OAAAA,EAAAG,QAAAH,GAEAN,qBACA,MAAAU,EAAAR,KAAAK,QAAAG,WACA,OAAAA,EAAAF,UAAAE,GAEAV,mBACA,MAAAU,EAAAR,KAAAK,QAAAG,WACA,OAAAA,EAAAD,QAAAC,EAAA,KAIAV,cACA,MAAAC,EAAAC,KAAAD,gBACAU,EAAAT,KAAAU,qBAAAX,GACAY,EAAAF,EAAAG,OACA,GAAAC,MAAAC,QAAAL,IAAAE,EAAA,GACA,OAAAA,EACA,OAAAF,EAAA,GACA,OAAAE,EACA,OAAAF,EAAAM,KAAA,SAIA,SAFAN,EAAAO,MAAA,EAAAP,EAAAG,OAAA,GAAAG,KAAA,cACAN,IAAAG,OAAA,KAIA,YAAAZ,KAAAiB,oBAEAnB,kBACA,MAAAW,EAAAT,KAAAkB,MAAAT,MAAAT,KAAAmB,OAAAC,OACAC,EAAArB,KAAAK,QAAAgB,SAUA,OAPAZ,EAAAa,OAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAJ,EAAAG,GAGA,OAFAD,EAAAE,GAAAF,EAAAE,IAAA,EACAF,EAAAE,KACAF,GACA,MAKAG,QAAA,CAGA5B,SAAAC,EAAA,IACA,MAAA4B,EAAAC,OAAAC,KAAA9B,GACA,OAAA4B,EAAAf,OAAA,CAGA,OADAb,EADA4B,EAAA,IAGA,SAGA,UAIA7B,qBAAAC,EAAA,IAEA,MAAA+B,EAAA9B,KAAAK,QAAAyB,MACAC,EAAA/B,KAAAK,QAAA0B,cAkCA,OA/BAD,EAAAR,OAAA,CAAAU,EAAAC,KACA,MAAAC,EAAAD,EAAAC,MACA,IAAAC,EAAApC,EAAAmC,IAAA,EAEA,OAAAC,EAAA,CACA,IAAAJ,EACA,OAAAC,EAGAG,EAAA,KAGA,MAAAC,EAAAH,EAAAI,MACA,IAAAC,EAGA,OAAAH,EAAA,CAEAG,EADAL,EAAA1B,QAAA6B,EAAA,SAIAE,EAAAF,EAIA,MAAAG,KAAAJ,KAAAG,IAGA,OAFAN,EAAAQ,KAAAD,GAEAP,GACA,cC5HAS,EAAgBb,OAAAc,EAAA,EAAAd,CACdjC,EHRF,WAA0B,IAAagD,EAAb3C,KAAa4C,eAAkD,OAA/D5C,KAAuC6C,MAAAC,IAAAH,GAAwB,MAA/D3C,KAA+D+C,GAAA,OAA/D/C,KAA+DgD,GAA/DhD,KAA+DiD,SAAA,SACzF,IGUA,EACA,KACA,WACA,MAIeC,EAAA,QAAAT","file":"tcg_pvc_CollectionSummary.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_vm._v(\"\\n  \"+_vm._s(_vm.summary)+\"\\n\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../vue-loader/lib/index.js??vue-loader-options!./CollectionSummary.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../vue-loader/lib/index.js??vue-loader-options!./CollectionSummary.vue?vue&type=script&lang=js&\"","<!-- A natural-language summary of a collection of things. -->\r\n\r\n<template>\r\n  <h3>\r\n    {{ summary }}\r\n  </h3>\r\n</template>\r\n\r\n<script>\r\n  import TopicComponent from './TopicComponent.vue';\r\n\r\n  export default {\r\n    mixins: [TopicComponent],\r\n    computed: {\r\n      // the final stringified output\r\n      summary() {\r\n        // get value quantity map\r\n        const valueQuantities = this.valueQuantities;\r\n        // check if plural\r\n        const isPlural = this.isPlural(valueQuantities);\r\n        // get context renderer\r\n        const contextFnKey = 'context' + (isPlural ? 'Plural' : 'Singular');\r\n        const contextFn = this[contextFnKey];\r\n        // get a natural list\r\n        const naturalList = this.naturalList;\r\n        // summarize\r\n        const summary = contextFn(naturalList);\r\n\r\n        return summary;\r\n      },\r\n      contextSingular() {\r\n        const context = this.options.context;\r\n        return context.singular || context;\r\n      },\r\n      contextPlural() {\r\n        const context = this.options.context;\r\n        return context.plural || context;\r\n      },\r\n      descriptorSingular() {\r\n        const descriptor = this.options.descriptor;\r\n        return descriptor.singular || descriptor;\r\n      },\r\n      descriptorPlural() {\r\n        const descriptor = this.options.descriptor;\r\n        return descriptor.plural || descriptor + 's';\r\n      },\r\n      // serializes naturalized quantities into a list\r\n      // e.g. \"1 apple and 2 oranges\"\r\n      naturalList() {\r\n        const valueQuantities = this.valueQuantities;\r\n        const items = this.naturalizeQuantities(valueQuantities);\r\n        const len = items.length;\r\n        if (Array.isArray(items) && len > 0) {\r\n          if (len === 1) {\r\n            return items[0];\r\n          } else if (len === 2) {\r\n            return items.join(' and ');\r\n          }\r\n          const leadingItems = items.slice(0, items.length - 1).join(', ');\r\n          const lastItem = items[items.length - 1];\r\n          return `${leadingItems}, and ${lastItem}`;\r\n        }\r\n        // TODO should this text be an option?\r\n        return `no ${this.descriptorPlural}`;\r\n      },\r\n      valueQuantities() {\r\n        const items = this.slots.items(this.$store.state);\r\n        const getValue = this.options.getValue;\r\n\r\n        // make an object of value => quantity\r\n        const valueQuantities = items.reduce((obj, item) => {\r\n          const val = getValue(item);\r\n          obj[val] = obj[val] || 0;\r\n          obj[val]++;\r\n          return obj;\r\n        }, {});\r\n\r\n        return valueQuantities;\r\n      },\r\n    },\r\n    methods: {\r\n      // takes the value of the valueQuantities computed property and returns\r\n      // the appropriate grammatical number.\r\n      isPlural(valueQuantities = {}) {\r\n        const values = Object.keys(valueQuantities);\r\n        if (values.length === 1) {\r\n          const firstValue = values[0];\r\n          const quantity = valueQuantities[firstValue];\r\n          if (quantity === 1) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n      // takes the value quantity map and converts values to natural language\r\n      // quantities (e.g. {apple: 2} => \"2 apples\")\r\n      naturalizeQuantities(valueQuantities = {}) {\r\n        // get some options\r\n        const types = this.options.types;\r\n        const includeZeroes = this.options.includeZeroes;\r\n\r\n        // convert to natural language and sort per order of types option\r\n        const quantities = types.reduce((acc, type) => {\r\n          const value = type.value;\r\n          let quantity = valueQuantities[value] || 0;\r\n\r\n          if (quantity === 0) {\r\n            if (!includeZeroes) {\r\n              return acc;\r\n            }\r\n            // natural zero => \"no\"\r\n            quantity = 'no';\r\n          }\r\n\r\n          const labelSingular = type.label;\r\n          let labelWithNumber;\r\n\r\n          // singular\r\n          if (quantity !== 1) {\r\n            const labelPlural = type.plural || labelSingular + 's';\r\n            labelWithNumber = labelPlural;\r\n          // plural\r\n          } else {\r\n            labelWithNumber = labelSingular;\r\n          }\r\n\r\n          // make label and push\r\n          const quantityWithLabel = `${quantity} ${labelWithNumber}`;\r\n          acc.push(quantityWithLabel);\r\n\r\n          return acc;\r\n        }, []);\r\n\r\n        return quantities;\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import { render, staticRenderFns } from \"./CollectionSummary.vue?vue&type=template&id=10a949da&scoped=true&\"\nimport script from \"./CollectionSummary.vue?vue&type=script&lang=js&\"\nexport * from \"./CollectionSummary.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"10a949da\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}